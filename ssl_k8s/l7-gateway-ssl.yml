---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: gw
    service: gw-svc
  name: gw-svc
  annotations:
    description: "The Gateway service"
spec:
  selector:
    app: gw
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
      name: gw-http-port
    - protocol: TCP
      port: 443
      targetPort: 8443
      name: gw-https-port
    - protocol: TCP
      port: 9443
      targetPort: 9443
      name: gw-pm-port      
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: gw-k8s
  labels:
    app: gw
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: gw
    spec:
      volumes:
        - name: restman
          configMap:
            name: license
            items:
              - key: accept.license
                path: accept
      containers:
      - name: gw   
        image: caapim/gateway
        volumeMounts:
          - name: restman
            mountPath: /opt/SecureSpan/Gateway/node/default/etc/bootstrap/services/restman
            subPath: accept
        imagePullPolicy: Always   
        ports:
          - containerPort: 8080
          - containerPort: 8443
          - containerPort: 9443         
        env:
          - name: ACCEPT_LICENSE 
            valueFrom: 
              configMapKeyRef:
                name: license
                key: accept.license
          - name: EXTRA_JAVA_ARGS
            valueFrom:
              configMapKeyRef:
                name: env
                key: extra-java-args.env
          - name: SSG_LICENSE
            valueFrom: 
              configMapKeyRef:
                name: license
                key: ssg.license
          - name: SSG_SSL_KEY
            valueFrom:
              configMapKeyRef:
                name: gw-sslkey
                key: ssg.sslkey
          - name: SSG_SSL_KEY_PASS
            valueFrom:
              configMapKeyRef:
                name: gw-sslkey
                key: ssg.keypass
          - name: SSG_ADMIN_USERNAME
            valueFrom: 
              secretKeyRef:
                name: gw-secret
                key: ssg.adminusername
          - name: SSG_ADMIN_PASSWORD 
            valueFrom: 
              secretKeyRef:
                name: gw-secret
                key: ssg.adminpassword
          - name: SSG_DATABASE_JDBC_URL
            valueFrom:
              configMapKeyRef:
                name: env
                key: ssg-database-jdbc-url.env
          - name: SSG_DATABASE_USER
            valueFrom: 
              secretKeyRef:
                name: gw-db-secret
                key: ssg.databaseuser
          - name: SSG_DATABASE_PASSWORD
            valueFrom: 
              secretKeyRef:
                name: gw-db-secret
                key: ssg.databasepass
          - name: SSG_CLUSTER_HOST
            valueFrom:
              configMapKeyRef:
                name: env
                key: ssg-cluster-host.env
          - name: SSG_CLUSTER_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: env
                key: ssg-cluster-password.env
          - name: SSG_JVM_HEAP
            valueFrom:
              configMapKeyRef:
                name: env
                key: ssg-jvm-heap.env
        livenessProbe:
          exec:
            command:
            - /opt/docker/rc.d/diagnostic/health_check.sh
          initialDelaySeconds: 120
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
        readinessProbe:
          exec:
            command:
            - /opt/docker/rc.d/diagnostic/health_check.sh
          initialDelaySeconds: 120
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
